101.37.66.151 	后端服务器
root/qwert112358!!@#%*
SECRET_KEY 
58guTuls0eLVBoU5

cd /opt/JavaProject/eg-go/project/eg-parent/eg-user

sudo docker logs -f -t --tail 300 fcfaaa296487 这个是查看服务日志的命令


svn update

source /etc/profile

sh restart-release.sh

这是重启user服务

如果有一次没启动成功，那就需要执行
sh mvn-restart-release.sh
需要先生成镜像

yum install docker-ce




服务器上到eg_comm目录下使用
mvn install

本地启动svn服务器命令
svnserve -d --listen-port 3690 -r C:/Users/admin/Desktop/program

svnserve -d -r /opt/svn/test/ 启动svn进程


这个 后台管理还有图片服务器各种web网站都在上面
root/qwert112358!!@#%*
Huihe123321
/home/fileService/fileService/webapps/tripPictstorage/qmore/apk	安卓apk放这里

121.40.150.184

/home/fileService/fileService/webapps/tripPictstorage
文件目录


这个两个文件修改下版本号
1
/home/fileService/fileService/webapps/tripPictstorage/qmore/download/appdownload.html

2
/home/fileService/fileService/webapps/tripPictstorage/qmore/download/en/appdownload.html


ip www.huihe.com
改成 121.40.150.184

查看列表
docker ps -a
docker start abb1bd4e29be 
docker romve id

重启docker
systemctl restart docker

查看日志
docker logs --since 30m f1db21ae4fcf   
docker logs --since 300 f1db21ae4fcf   

docker  images

1 下载源代码：mvn dependency:sources -DdownloadSources=true -DdownloadJavadocs=true


mvn -U idea:idea

258252520@qq.com
Huihe031
阿里云帐号


81.68.133.40
22
root
Huihe123321
runApi服务器



nohup ./bin/elasticsearch >elasticsearch.out &

启动  systemctl start docker
守护进程重启 ??sudo systemctl daemon-reload
重启docker服务 ??systemctl restart docker
重启docker服务 ?sudo service docker restart
关闭docker   service docker stop   
关闭docker  systemctl stop docker

重启docker
service docker restart

运行es
docker pull docker.elastic.co/elasticsearch/elasticsearch:6.1.1
 curl -XPUT -H "Content-Type: application/json" http://127.0.0.1:9200/price/_settings -d '{"index.blocks.read_only_allow_delete": null}'



docker run --name elasticsearch  -e ES_JAVA_OPTS="-Xms256m -Xmx256m" -d -p 9200:9200 -p 9300:9300  -e "discovery.type=single-node"  
-e "discovery.type=single-node" 


docker run -d --name my-es_admin -p 9100:9100 mobz/elasticsearch-head:6.1.1


运行kibana
docker pull kibana:7.5.1
docker run -d -p 5601:5601 --link elasticsearch -e ELASTICSEARCH_URL=http://elasticsearch:9200 docker.elastic.co/kibana/kibana:6.1.1

docker exec -it elk（本人elk的docker容器名字） /bin/bash


例：实时查看docker容器名为s12的最后10行日志
sudo docker logs -f -t --tail 10 s12

linux下获取占用内存资源最多的10个进程，可以使用如下命令组合：
ps aux|head -1;ps aux|grep -v PID|sort -rn -k +4|head

端口
netstat -tanlp

运行logstash 
docker run --rm -it --name logstash --link elasticsearch -d -v ~/elk/yaml/logstash.conf:/usr/share/logstash/pipeline/logstash.conf docker.elastic.co/logstash/logstash:6.1.1

运行filebeat 
docker run --name filebeat -d --link logstash -v ~/elk/yaml/filebeat.yml:/usr/share/filebeat/filebeat.yml -v ~/elk/logs/:/home/logs/  docker.elastic.co/beats/filebeat:6.1.1

服务器启动 redis 并添加密码
docker run --name redis -p 6379:6379 -d redis --requirepass "123456"

启动mysql
sudo docker run --name mysql -e MYSQL_ROOT_PASSWORD=123456 -p 3306:3306 -d mysql

启动activemq
docker run -d --name activemq -p 61616:61616 -p 8161:8161 webcenter/activemq

Linux查看tomcat 控制台输出命令
进入tomcat/logs/文件夹下
键入指令：tail -f catalina.out

 pg_ctl start         /etc/init.d/redis start

ps -ef | grep java          kill  -9 324        netstat -nlt|grep 6379                         /etc/init.d/redis start  

服务器防火墙端口
https://blog.csdn.net/realjh/article/details/82048492  

./mongod --dbpath=/usr/local/mongodb/data/ --logpath=/usr/local/mongodb/logs/mongodb.log  --fork

sudo chmod -R 777

nginx ：
docker run --detach         --name wx-nginx         -p 443:443        -p 80:80   -v /home/evan/workspace/wxserver/nginx/data:/usr/share/nginx/html:rw        -v /home/evan/workspace/wxserver/nginx/config/nginx.conf:/etc/nginx/nginx.conf/:rw        -v /home/evan/workspace/wxserver/nginx/config/conf.d/default.conf:/etc/nginx/conf.d/default.conf:rw        -v /home/evan/workspace/wxserver/nginx/logs:/var/log/nginx/:rw        -v /home/evan/workspace/wxserver/nginx/ssl:/ssl/:rw   -v /home:/home  -v /etc:/etc   -d nginx

docker run --detach         --name wx-nginx         -p 443:443        -p 80:80      -v /home/evan/workspace/wxserver/nginx/data:/usr/share/nginx/html:rw    -v /home/evan/workspace/wxserver/nginx/config/conf.d/default.conf:/etc/nginx/conf.d/default.conf:rw        -v /home/evan/workspace/wxserver/nginx/logs:/var/log/nginx/:rw        -v /home/evan/workspace/wxserver/nginx/ssl:/ssl/:rw   -v /home:/home  -v /etc:/etc   -d nginx:1.8


ribbtmq
docker run -d --hostname my-rabbit --name rabbit -e RABBITMQ_DEFAULT_USER=admin -e RABBITMQ_DEFAULT_PASS=admin -p 15672:15672 -p 5672:5672 -p 25672:25672 -p 61613:61613 -p 1883:1883 2888deb59dfc

MYSQL
//docker run -d -p 0.0.0.0:3306:3306 --name mysql -v /opt/mysqlConfig/mysqld.cnf:/etc/mysql/mysql.conf.d/mysqld.cnf -v /home/mysql/logs:/logs -v /home/mysql/data:/var/lib/mysql -e MYSQL_ROOT_PASSWORD="123456" 69056560eb44

docker run -d -p 0.0.0.0:3306:3306 --name mysql  -v /home/mysql/logs:/logs -v /home/mysql/data:/var/lib/mysql -e MYSQL_ROOT_PASSWORD="123456" 69056560eb44

redis
docker run -d --name redis  -p 6379:6379 -v /usr/lical/redis/redis.conf:/etc/redis/redis.conf -v /usr/loca/redis/data/data:/data  0f88f9be5839  --requirepass "123456"  --appendonly yes

启动 jar
nohup java -jar xxl-job-admin-2.0.2.jar > system.log 2>&1 &


mirror.ccs.tencentyun.com
docker私有库
docker pull docker.io/registry--------docker pull docker.io/registry--------docker pull docker.io/registry--------docker pull docker.io/registry--------docker pull docker.io/registry--------docker pull docker.io/registry--------docker pull docker.io/registry--------docker pull docker.io/registry--------docker pull docker.io/registry--------docker pull docker.io/registry--------docker pull docker.io/registry--------docker pull docker.io/registry--------
docker run -d -p 5000:5000 --name registry -v /home/dockeruser/data:/tmp/registry  docker.io/registry
docker pull redis:latest 先拉镜像
docker images
 sudo docker exec -it 3649c6bb150d /bin/bash  


svn://121.40.150.184/JavaProjects/native/Branch/overseas这是易出境app端文件

svn://121.40.150.184/JavaProjects/native/Branch/overseas/js/navite/SystemCode.js  访问地址配置文件

EmojiParser.parseToHtmlDecimal(nick_name);  //表情转码
EmojiParser.parseToUnicode(nick_name); //表情解码


   CGroup: /system.slice/docker.service
           ├─2229 /usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock
           └─2648 docker-applyLayer /var/lib/docker/devicemapper/mnt/c1670c709023bdf3f748b6461e67c51d2c23ba1b99aa587be747aaa671089c33/rootfs



nohup ./bin/elasticsearch >elasticsearch.out &

启动  systemctl start docker
守护进程重启 ??sudo systemctl daemon-reload
重启docker服务 ??systemctl restart docker
重启docker服务 ?sudo service docker restart
关闭docker   service docker stop   
关闭docker  systemctl stop docker

重启docker
service docker restart

运行es
docker pull docker.elastic.co/elasticsearch/elasticsearch:6.1.1
docker run -e ES_JAVA_OPTS="-Xms256m -Xmx256m" -d -p 9200:9200 -p 9300:9300 -v esData1:/usr/share/elasticsearch  --name elasticsearch 06f0d8328d66
docker run --name elasticsearch  -e ES_JAVA_OPTS="-Xms256m -Xmx256m" -d -p 9200:9200 -p 9300:9300  -e "discovery.type=single-node"  
-e "discovery.type=single-node" 


docker run -d --name my-es_admin -p 9100:9100 mobz/elasticsearch-head:6.1.1


运行kibana
docker pull kibana:6.1.1
docker run -d -p 5601:5601 --link elasticsearch -e ELASTICSEARCH_URL=http://elasticsearch:9200 docker.elastic.co/kibana/kibana:6.1.1

docker exec -it elk（本人elk的docker容器名字） /bin/bash


例：实时查看docker容器名为s12的最后10行日志
sudo docker logs -f -t --tail 10 s12

linux下获取占用内存资源最多的10个进程，可以使用如下命令组合：
ps aux|head -1;ps aux|grep -v PID|sort -rn -k +4|head

端口
netstat -tanlp

运行logstash 
docker run --rm -it --name logstash --link elasticsearch -d -v ~/elk/yaml/logstash.conf:/usr/share/logstash/pipeline/logstash.conf docker.elastic.co/logstash/logstash:6.1.1

运行filebeat 
docker run --name filebeat -d --link logstash -v ~/elk/yaml/filebeat.yml:/usr/share/filebeat/filebeat.yml -v ~/elk/logs/:/home/logs/  docker.elastic.co/beats/filebeat:6.1.1

服务器启动 redis 并添加密码
docker run --name redis -p 6379:6379 -d redis --requirepass "123456"

启动mysql
sudo docker run --name mysql -e MYSQL_ROOT_PASSWORD=123456 -p 3306:3306 -d mysql

启动activemq
docker run -d --name activemq -p 61616:61616 -p 8161:8161 webcenter/activemq

Linux查看tomcat 控制台输出命令
进入tomcat/logs/文件夹下
键入指令：tail -f catalina.out

 pg_ctl start         /etc/init.d/redis start

ps -ef | grep java          kill  -9 324        netstat -nlt|grep 6379                         /etc/init.d/redis start  

服务器防火墙端口
https://blog.csdn.net/realjh/article/details/82048492  

./mongod --dbpath=/usr/local/mongodb/data/ --logpath=/usr/local/mongodb/logs/mongodb.log  --fork

sudo chmod -R 777

nginx ：
docker run --detach         --name wx-nginx         -p 443:443        -p 80:80         -v /home/evan/workspace/wxserver/nginx/data:/usr/share/nginx/html:rw        -v /home/evan/workspace/wxserver/nginx/config/nginx.conf:/etc/nginx/nginx.conf/:rw        -v /home/evan/workspace/wxserver/nginx/config/conf.d/default.conf:/etc/nginx/conf.d/default.conf:rw        -v /home/evan/workspace/wxserver/nginx/logs:/var/log/nginx/:rw        -v /home/evan/workspace/wxserver/nginx/ssl:/ssl/:rw   -v /home:/home  -v /etc:/etc   -d nginx


ribbtmq
docker run -d --hostname my-rabbit --name rabbit -e RABBITMQ_DEFAULT_USER=admin -e RABBITMQ_DEFAULT_PASS=admin -p 15672:15672 -p 5672:5672 -p 25672:25672 -p 61613:61613 -p 1883:1883 2888deb59dfc

MYSQL
docker run -d -p 0.0.0.0:3306:3306 --name mysql -v /home/mysql/logs:/logs -v /home/mysql/data:/var/lib/mysql -e MYSQL_ROOT_PASSWORD="123456" 69056560eb44

redis
docker run -d --name redis  -p 6379:6379 -v /usr/lical/redis/redis.conf:/etc/redis/redis.conf -v /usr/loca/redis/data/data:/data  0f88f9be5839  --requirepass "123456"  --appendonly yes

启动 jar
nohup java -jar xxl-job-admin-2.0.2.jar > system.log 2>&1 &

docker私有库
docker pull docker.io/registry
docker run -d -p 5000:5000 --name registry -v /home/dockeruser/data:/tmp/registry  docker.io/registry
docker pull redis:latest 先拉镜像
docker images
systemctl start docker 启动docker
 sudo docker exec -it 3649c6bb150d /bin/bash  

docker pull mysql:5.6
docker pull redis:latest
docker pull ribbtmq:5.6
docker pull mysql:5.6
docker pull mysql:5.6
docker pull mysql:5.6


ribbtmq
docker run -d --hostname my-rabbit --name rabbit -e RABBITMQ_DEFAULT_USER=admin -e RABBITMQ_DEFAULT_PASS=admin -p 15672:15672 -p 5672:5672 -p 25672:25672 -p 61613:61613 -p 1883:1883 2888deb59dfc
docker run -d --name rabbitmq -p 4369:4369 -p 5671:5671 -p 5672:5672 -p 15671:15671 -p 25672:25672 -p 15672:15672 rabbitmq:management

MYSQL
docker run -d -p 0.0.0.0:3306:3306 --name mysql -v /home/mysql/logs:/logs -v /home/mysql/data:/var/lib/mysql -e MYSQL_ROOT_PASSWORD="123456" 0d64f46acfd1

redis
docker run -d --name redis  -p 6379:6379 -v /usr/lical/redis/redis.conf:/etc/redis/redis.conf -v /usr/loca/redis/data/data:/data  0f88f9be5839  --requirepass "123456"  --appendonly yes

运行es
docker pull docker.elastic.co/elasticsearch/elasticsearch:6.1.1
docker run -e ES_JAVA_OPTS="-Xms256m -Xmx256m" -d -p 9200:9200 -p 9300:9300 -v esData1:/usr/share/elasticsearch  --name elasticsearch  06f0d8328d66 
docker run --name elasticsearch  -e ES_JAVA_OPTS="-Xms256m -Xmx256m" -d -p 9200:9200 -p 9300:9300  -e "discovery.type=single-node"  

7.4.2
docker run --name elasticsearch -p 9200:9200 -p 9300:9300 -e xpack.security.enabled=true -v /d/work/docker/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml -v /d/work/docker/elasticsearch/data:/usr/share/elasticsearch/data -d elasticsearch:6.6.1


运行kibana
docker run -d -p 5601:5601 --link elasticsearch -e ELASTICSEARCH_URL=http://elasticsearch:9200 docker.elastic.co/kibana/kibana:6.1.1

nginx ：
docker run --detach         --name wx-nginx         -p 443:443        -p 80:80         -v /home/evan/workspace/wxserver/nginx/data:/usr/share/nginx/html:rw        -v /home/evan/workspace/wxserver/nginx/config/nginx.conf:/etc/nginx/nginx.conf/:rw        -v /home/evan/workspace/wxserver/nginx/config/conf.d/default.conf:/etc/nginx/conf.d/default.conf:rw        -v /home/evan/workspace/wxserver/nginx/logs:/var/log/nginx/:rw        -v /home/evan/workspace/wxserver/nginx/ssl:/ssl/:rw   -v /home:/home   -v /etc:/etc   -d nginx


docker run -itd --name mysql-test -p 3306:3306 -e MYSQL_ROOT_PASSWORD=123456 mysql

/usr/share/doc/subversion-libs-1.7.14


/etc/mysql/my.cnf


firewall-cmd --add-port=5000/tcp --permanent
firewall-cmd --reload

查看索引使用:curl -XGET '127.0.0.1:9200/_cat/indices?v'

删除索引:curl -XDELETE 'http://127.0.01:9200/soalog_dev-2019.06.30'

ENTRYPOINT ["sh","-c","java $params -Duser.timezone=GMT+08 -Xms0m -Xmx400m -jar /root/user-service-web-1.0.jar"]
-Xms0m -Xmx200m



sudo vi /lib/systemd/system/docker.service
ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock -H tcp://0.0.0.0:2375 -H unix://var/run/docker.sock


mirror.ccs.tencentyun.com