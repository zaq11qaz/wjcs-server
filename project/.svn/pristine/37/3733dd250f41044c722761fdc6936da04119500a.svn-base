<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.huihe.eg.authorization.mybatis.dao.ManagerIdentityMapper">
  <resultMap id="BaseResultMap" type="com.huihe.eg.authorization.model.ManagerIdentityEntity">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="short_name" jdbcType="VARCHAR" property="short_name" />
    <result column="update_time" jdbcType="TIMESTAMP" property="update_time" />
    <result column="create_time" jdbcType="TIMESTAMP" property="create_time" />
    <result column="serial_number" jdbcType="VARCHAR" property="serial_number" />
    <result column="sort" jdbcType="INTEGER" property="sort" />
    <result column="state" jdbcType="BIT" property="state" />
    <result column="levels" jdbcType="INTEGER" property="levels" />
  </resultMap>
  <sql id="Base_Column_List">
    id, type, short_name, update_time, create_time, serial_number, sort, state, levels
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from authorization_manager_identity
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from authorization_manager_identity
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.huihe.eg.authorization.model.ManagerIdentityEntity">
    insert into authorization_manager_identity (id, type, short_name, 
      update_time, create_time, serial_number, 
      sort, state, levels)
    values (#{id,jdbcType=BIGINT}, #{type,jdbcType=VARCHAR}, #{short_name,jdbcType=VARCHAR}, 
      #{update_time,jdbcType=TIMESTAMP}, #{create_time,jdbcType=TIMESTAMP}, #{serial_number,jdbcType=VARCHAR}, 
      #{sort,jdbcType=INTEGER}, #{state,jdbcType=BIT}, #{levels,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.huihe.eg.authorization.model.ManagerIdentityEntity">
    insert into authorization_manager_identity
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="short_name != null">
        short_name,
      </if>
      <if test="update_time != null">
        update_time,
      </if>
      <if test="create_time != null">
        create_time,
      </if>
      <if test="serial_number != null">
        serial_number,
      </if>
      <if test="sort != null">
        sort,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="levels != null">
        levels,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="short_name != null">
        #{short_name,jdbcType=VARCHAR},
      </if>
      <if test="update_time != null">
        #{update_time,jdbcType=TIMESTAMP},
      </if>
      <if test="create_time != null">
        #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="serial_number != null">
        #{serial_number,jdbcType=VARCHAR},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        #{state,jdbcType=BIT},
      </if>
      <if test="levels != null">
        #{levels,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.huihe.eg.authorization.model.ManagerIdentityEntity">
    update authorization_manager_identity
    <set>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="short_name != null">
        short_name = #{short_name,jdbcType=VARCHAR},
      </if>
      <if test="update_time != null">
        update_time = #{update_time,jdbcType=TIMESTAMP},
      </if>
      <if test="create_time != null">
        create_time = #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="serial_number != null">
        serial_number = #{serial_number,jdbcType=VARCHAR},
      </if>
      <if test="sort != null">
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=BIT},
      </if>
      <if test="levels != null">
        levels = #{levels,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.huihe.eg.authorization.model.ManagerIdentityEntity">
    update authorization_manager_identity
    set type = #{type,jdbcType=VARCHAR},
      short_name = #{short_name,jdbcType=VARCHAR},
      update_time = #{update_time,jdbcType=TIMESTAMP},
      create_time = #{create_time,jdbcType=TIMESTAMP},
      serial_number = #{serial_number,jdbcType=VARCHAR},
      sort = #{sort,jdbcType=INTEGER},
      state = #{state,jdbcType=BIT},
      levels = #{levels,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="query" parameterType="com.huihe.eg.authorization.model.ManagerIdentityEntity" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    FROM authorization_manager_identity
    <where>
      <if test="param.id!=null">
        AND id = #{param.id,jdbcType=BIGINT}
      </if>
      <if test="param.type!=null">
        AND type = #{param.type,jdbcType=VARCHAR}
      </if>
      <if test="param.short_name!=null">
        AND short_name = #{param.short_name,jdbcType=VARCHAR}
      </if>
      <if test="param.update_time!=null">
        AND update_time = #{param.update_time,jdbcType=TIMESTAMP}
      </if>
      <if test="param.create_time!=null">
        AND create_time = #{param.create_time,jdbcType=TIMESTAMP}
      </if>
      <if test="param.serial_number!=null">
        AND serial_number = #{param.serial_number,jdbcType=VARCHAR}
      </if>
      <if test="param.sort!=null">
        AND sort = #{param.sort,jdbcType=INTEGER}
      </if>
      <if test="param.state!=null">
        AND state = #{param.state,jdbcType=BIT}
      </if>
      <if test="param.levels!=null">
        AND levels = #{param.levels,jdbcType=INTEGER}
      </if>
    </where>
  </select>
  <select id="queryListPage" parameterType="com.huihe.eg.authorization.model.ManagerIdentityEntity" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    FROM authorization_manager_identity
    <where>
      <if test="param.id!=null">
        AND id = #{param.id,jdbcType=BIGINT}
      </if>
      <if test="param.type!=null">
        AND type = #{param.type,jdbcType=VARCHAR}
      </if>
      <if test="param.short_name!=null">
        AND short_name = #{param.short_name,jdbcType=VARCHAR}
      </if>
      <if test="param.update_time!=null">
        AND update_time = #{param.update_time,jdbcType=TIMESTAMP}
      </if>
      <if test="param.create_time!=null">
        AND create_time = #{param.create_time,jdbcType=TIMESTAMP}
      </if>
      <if test="param.serial_number!=null">
        AND serial_number = #{param.serial_number,jdbcType=VARCHAR}
      </if>
      <if test="param.sort!=null">
        AND sort = #{param.sort,jdbcType=INTEGER}
      </if>
      <if test="param.state!=null">
        AND state = #{param.state,jdbcType=BIT}
      </if>
      <if test="param.levels!=null">
        AND levels = #{param.levels,jdbcType=INTEGER}
      </if>
    </where>
    ORDER BY id DESC limit #{param.startRow},#{param.pageSize}
  </select>
  <select id="queryListPageCount" parameterType="com.huihe.eg.authorization.model.ManagerIdentityEntity" resultType="java.lang.Integer">
    SELECT
    count(0)
    FROM authorization_manager_identity
    <where>
      <if test="param.id!=null">
        AND id = #{param.id,jdbcType=BIGINT}
      </if>
      <if test="param.type!=null">
        AND type = #{param.type,jdbcType=VARCHAR}
      </if>
      <if test="param.short_name!=null">
        AND short_name = #{param.short_name,jdbcType=VARCHAR}
      </if>
      <if test="param.update_time!=null">
        AND update_time = #{param.update_time,jdbcType=TIMESTAMP}
      </if>
      <if test="param.create_time!=null">
        AND create_time = #{param.create_time,jdbcType=TIMESTAMP}
      </if>
      <if test="param.serial_number!=null">
        AND serial_number = #{param.serial_number,jdbcType=VARCHAR}
      </if>
      <if test="param.sort!=null">
        AND sort = #{param.sort,jdbcType=INTEGER}
      </if>
      <if test="param.state!=null">
        AND state = #{param.state,jdbcType=BIT}
      </if>
      <if test="param.levels!=null">
        AND levels = #{param.levels,jdbcType=INTEGER}
      </if>
    </where>
  </select>
</mapper>