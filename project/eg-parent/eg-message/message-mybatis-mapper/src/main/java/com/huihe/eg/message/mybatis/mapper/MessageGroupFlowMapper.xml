<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.huihe.eg.message.mybatis.dao.MessageGroupFlowMapper">
  <resultMap id="BaseResultMap" type="com.huihe.eg.message.model.MessageGroupFlowEntity">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="group_id" jdbcType="VARCHAR" property="group_id" />
    <result column="create_time" jdbcType="TIMESTAMP" property="create_time" />
    <result column="update_time" jdbcType="TIMESTAMP" property="update_time" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="stream_id" jdbcType="VARCHAR" property="stream_id" />
    <result column="stream_param" jdbcType="VARCHAR" property="stream_param" />
    <result column="sequence" jdbcType="VARCHAR" property="sequence" />
    <result column="channel_id" jdbcType="VARCHAR" property="channel_id" />
    <result column="app" jdbcType="VARCHAR" property="app" />
    <result column="appname" jdbcType="VARCHAR" property="appname" />
    <result column="live_location" jdbcType="INTEGER" property="live_location" />
  </resultMap>
  <sql id="Base_Column_List">
    id, group_id, create_time, update_time, status, stream_id, stream_param, sequence, 
    channel_id, app, appname, live_location
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from message_group_flow
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from message_group_flow
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.huihe.eg.message.model.MessageGroupFlowEntity">
    insert into message_group_flow (id, group_id, create_time, 
      update_time, status, stream_id, 
      stream_param, sequence, channel_id, 
      app, appname, live_location
      )
    values (#{id,jdbcType=BIGINT}, #{group_id,jdbcType=VARCHAR}, #{create_time,jdbcType=TIMESTAMP}, 
      #{update_time,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, #{stream_id,jdbcType=VARCHAR}, 
      #{stream_param,jdbcType=VARCHAR}, #{sequence,jdbcType=VARCHAR}, #{channel_id,jdbcType=VARCHAR}, 
      #{app,jdbcType=VARCHAR}, #{appname,jdbcType=VARCHAR}, #{live_location,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.huihe.eg.message.model.MessageGroupFlowEntity">
    insert into message_group_flow
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="group_id != null">
        group_id,
      </if>
      <if test="create_time != null">
        create_time,
      </if>
      <if test="update_time != null">
        update_time,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="stream_id != null">
        stream_id,
      </if>
      <if test="stream_param != null">
        stream_param,
      </if>
      <if test="sequence != null">
        sequence,
      </if>
      <if test="channel_id != null">
        channel_id,
      </if>
      <if test="app != null">
        app,
      </if>
      <if test="appname != null">
        appname,
      </if>
      <if test="live_location != null">
        live_location,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="group_id != null">
        #{group_id,jdbcType=VARCHAR},
      </if>
      <if test="create_time != null">
        #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="update_time != null">
        #{update_time,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="stream_id != null">
        #{stream_id,jdbcType=VARCHAR},
      </if>
      <if test="stream_param != null">
        #{stream_param,jdbcType=VARCHAR},
      </if>
      <if test="sequence != null">
        #{sequence,jdbcType=VARCHAR},
      </if>
      <if test="channel_id != null">
        #{channel_id,jdbcType=VARCHAR},
      </if>
      <if test="app != null">
        #{app,jdbcType=VARCHAR},
      </if>
      <if test="appname != null">
        #{appname,jdbcType=VARCHAR},
      </if>
      <if test="live_location != null">
        #{live_location,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.huihe.eg.message.model.MessageGroupFlowEntity">
    update message_group_flow
    <set>
      <if test="group_id != null">
        group_id = #{group_id,jdbcType=VARCHAR},
      </if>
      <if test="create_time != null">
        create_time = #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="update_time != null">
        update_time = #{update_time,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="stream_id != null">
        stream_id = #{stream_id,jdbcType=VARCHAR},
      </if>
      <if test="stream_param != null">
        stream_param = #{stream_param,jdbcType=VARCHAR},
      </if>
      <if test="sequence != null">
        sequence = #{sequence,jdbcType=VARCHAR},
      </if>
      <if test="channel_id != null">
        channel_id = #{channel_id,jdbcType=VARCHAR},
      </if>
      <if test="app != null">
        app = #{app,jdbcType=VARCHAR},
      </if>
      <if test="appname != null">
        appname = #{appname,jdbcType=VARCHAR},
      </if>
      <if test="live_location != null">
        live_location = #{live_location,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.huihe.eg.message.model.MessageGroupFlowEntity">
    update message_group_flow
    set group_id = #{group_id,jdbcType=VARCHAR},
      create_time = #{create_time,jdbcType=TIMESTAMP},
      update_time = #{update_time,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      stream_id = #{stream_id,jdbcType=VARCHAR},
      stream_param = #{stream_param,jdbcType=VARCHAR},
      sequence = #{sequence,jdbcType=VARCHAR},
      channel_id = #{channel_id,jdbcType=VARCHAR},
      app = #{app,jdbcType=VARCHAR},
      appname = #{appname,jdbcType=VARCHAR},
      live_location = #{live_location,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="query" parameterType="com.huihe.eg.message.model.MessageGroupFlowEntity" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    FROM message_group_flow
    <where>
      <if test="param.id!=null">
        AND id = #{param.id,jdbcType=BIGINT}
      </if>
      <if test="param.group_id!=null">
        AND group_id = #{param.group_id,jdbcType=VARCHAR}
      </if>
      <if test="param.create_time!=null">
        AND create_time = #{param.create_time,jdbcType=TIMESTAMP}
      </if>
      <if test="param.update_time!=null">
        AND update_time = #{param.update_time,jdbcType=TIMESTAMP}
      </if>
      <if test="param.status!=null">
        AND status = #{param.status,jdbcType=INTEGER}
      </if>
      <if test="param.stream_id!=null">
        AND stream_id = #{param.stream_id,jdbcType=VARCHAR}
      </if>
      <if test="param.stream_param!=null">
        AND stream_param = #{param.stream_param,jdbcType=VARCHAR}
      </if>
      <if test="param.sequence!=null">
        AND sequence = #{param.sequence,jdbcType=VARCHAR}
      </if>
      <if test="param.channel_id!=null">
        AND channel_id = #{param.channel_id,jdbcType=VARCHAR}
      </if>
      <if test="param.app!=null">
        AND app = #{param.app,jdbcType=VARCHAR}
      </if>
      <if test="param.appname!=null">
        AND appname = #{param.appname,jdbcType=VARCHAR}
      </if>
      <if test="param.live_location!=null">
        AND live_location = #{param.live_location,jdbcType=INTEGER}
      </if>
    </where>
  </select>
  <select id="queryListPage" parameterType="com.huihe.eg.message.model.MessageGroupFlowEntity" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    FROM message_group_flow
    <where>
      <if test="param.id!=null">
        AND id = #{param.id,jdbcType=BIGINT}
      </if>
      <if test="param.group_id!=null">
        AND group_id = #{param.group_id,jdbcType=VARCHAR}
      </if>
      <if test="param.create_time!=null">
        AND create_time = #{param.create_time,jdbcType=TIMESTAMP}
      </if>
      <if test="param.update_time!=null">
        AND update_time = #{param.update_time,jdbcType=TIMESTAMP}
      </if>
      <if test="param.status!=null">
        AND status = #{param.status,jdbcType=INTEGER}
      </if>
      <if test="param.stream_id!=null">
        AND stream_id = #{param.stream_id,jdbcType=VARCHAR}
      </if>
      <if test="param.stream_param!=null">
        AND stream_param = #{param.stream_param,jdbcType=VARCHAR}
      </if>
      <if test="param.sequence!=null">
        AND sequence = #{param.sequence,jdbcType=VARCHAR}
      </if>
      <if test="param.channel_id!=null">
        AND channel_id = #{param.channel_id,jdbcType=VARCHAR}
      </if>
      <if test="param.app!=null">
        AND app = #{param.app,jdbcType=VARCHAR}
      </if>
      <if test="param.appname!=null">
        AND appname = #{param.appname,jdbcType=VARCHAR}
      </if>
      <if test="param.live_location!=null">
        AND live_location = #{param.live_location,jdbcType=INTEGER}
      </if>
    </where>
    ORDER BY id DESC limit #{param.startRow},#{param.pageSize}
  </select>
  <select id="queryListPageCount" parameterType="com.huihe.eg.message.model.MessageGroupFlowEntity" resultType="java.lang.Integer">
    SELECT
    count(0)
    FROM message_group_flow
    <where>
      <if test="param.id!=null">
        AND id = #{param.id,jdbcType=BIGINT}
      </if>
      <if test="param.group_id!=null">
        AND group_id = #{param.group_id,jdbcType=VARCHAR}
      </if>
      <if test="param.create_time!=null">
        AND create_time = #{param.create_time,jdbcType=TIMESTAMP}
      </if>
      <if test="param.update_time!=null">
        AND update_time = #{param.update_time,jdbcType=TIMESTAMP}
      </if>
      <if test="param.status!=null">
        AND status = #{param.status,jdbcType=INTEGER}
      </if>
      <if test="param.stream_id!=null">
        AND stream_id = #{param.stream_id,jdbcType=VARCHAR}
      </if>
      <if test="param.stream_param!=null">
        AND stream_param = #{param.stream_param,jdbcType=VARCHAR}
      </if>
      <if test="param.sequence!=null">
        AND sequence = #{param.sequence,jdbcType=VARCHAR}
      </if>
      <if test="param.channel_id!=null">
        AND channel_id = #{param.channel_id,jdbcType=VARCHAR}
      </if>
      <if test="param.app!=null">
        AND app = #{param.app,jdbcType=VARCHAR}
      </if>
      <if test="param.appname!=null">
        AND appname = #{param.appname,jdbcType=VARCHAR}
      </if>
      <if test="param.live_location!=null">
        AND live_location = #{param.live_location,jdbcType=INTEGER}
      </if>
    </where>
  </select>
</mapper>